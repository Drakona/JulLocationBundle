
{% set locationTypes = [ 'location', 'city', 'state', 'country'] %}
{% if locationForm is not defined and form is defined %}{% set locationForm = form %}{% endif %}

<script type="text/javascript">
function GmapInit(){
	
	var styleArray = [{{ styleArray|default()|raw }}];
	
	var mapOptions = {
		styles: styleArray,
		mapTypeId: {{ mapTypeId|default('google.maps.MapTypeId.ROADMAP')|raw }},
		center:

{% for locationType in locationTypes if attribute( locationForm, locationType ) is defined %}
{% set locationTemp = attribute( locationForm, locationType ) %}
{% if locationTemp.latitude is defined and locationTemp.latitude.vars.value > 0 %}
new google.maps.LatLng({{ locationTemp.latitude.vars.value }},{{ locationTemp.longitude.vars.value }}),
zoom: 17,
{% else %}
{{ mapCenter|default('new google.maps.LatLng(40.4230,-98.7372)')|raw }},
zoom: {{ zoom|default('3') }},
{% endif %}
{% endfor %}

		{{ mapOptions|default()|raw }}
	};

	var acOptions = {

		types: {% if placeType is defined %}{{ placeType|raw }}{% else %}
{% if attribute( locationForm, 'location' ) is defined %}['establishment'],{% endif %}
{% if attribute( locationForm, 'city' ) is defined %}['(cities)'],{% endif %}
{% if attribute( locationForm, 'state' ) is defined or attribute( locationForm, 'country' ) is defined %}['(regions)'],{% endif %}
{% endif %}

		{{ acOptions|default()|raw }}
	};
	
	var map = new google.maps.Map(document.getElementById( '{{ mapDiv|default('map_canvas') }}'), mapOptions);

	{% if autocompleteField is defined %}
	var input = document.getElementById( '{{ autocompleteField.vars.id }}' );
	{% else %}
	{% for locationType in locationTypes if attribute( locationForm, locationType ) is defined %}
	{% set locationTemp = attribute( locationForm, locationType ) %}
	{% if attribute( locationTemp, 'fullname' ) is defined %}
	var input = document.getElementById( '{{ attribute( locationTemp, 'fullname' ).vars.id }}' );
	{% else %}
	var input = document.getElementById( '{{ attribute( locationTemp, 'name' ).vars.id }}' );
	{% endif %}
	{% endfor %}
	{% endif %}
	
	var autocomplete = new google.maps.places.Autocomplete(input, acOptions);
	var infowindow = new google.maps.InfoWindow();
	var marker = new google.maps.Marker({map: map});

	// capture Gmap 'enter' to avoid impromptue submission
	google.maps.event.addDomListener(input, 'keydown', function(e) { if (e.keyCode == 13) { if (e.preventDefault) e.preventDefault(); else{ e.cancelBubble = true; e.returnValue = false;}}});

	// autocomplete listener
	google.maps.event.addListener(autocomplete, 'place_changed', function() {
        infowindow.close();
        marker.setVisible(false);
        input.className = '';
        var place = autocomplete.getPlace();
        if (!place.geometry) {
          // Inform the user that the place was not found and return.
          input.className = 'notfound';
          return;
        }

        // If the place has a geometry, then present it on a map.
        if (place.geometry.viewport) {
          map.fitBounds(place.geometry.viewport);
        } else {
          map.setCenter(place.geometry.location);
          map.setZoom(17);
        }
        var image = new google.maps.MarkerImage(
            place.icon,
            new google.maps.Size(71, 71),
            new google.maps.Point(0, 0),
            new google.maps.Point(17, 34),
            new google.maps.Size(35, 35));
        marker.setIcon(image);
        marker.setPosition(place.geometry.location);

{% set locationTemp = locationForm %}
{% for locationType in locationTypes if attribute( locationTemp, locationType ) is defined %}
	{% set locationTemp = attribute( locationTemp, locationType ) %}
	{% for key in locationTemp|keys %}     
{% if key == 'name' and locationType == 'location' %}document.getElementById('{{ locationTemp.name.vars.id }}').value = place.name;{% endif %}
{% if key == 'latitude' and loop.parent.loop.index == 1 %}document.getElementById('{{ locationTemp.latitude.vars.id }}').value = place.geometry.location.lat();{% endif %}
{% if key == 'longitude' and loop.parent.loop.index == 1 %}document.getElementById('{{ locationTemp.longitude.vars.id }}').value = place.geometry.location.lng();{% endif %}
{% if key == 'address' %}document.getElementById('{{ locationTemp.address.vars.id }}').value = place.formatted_address;{% endif %}
{% if key == 'postcode' %}$.each(place.address_components, function(){if(this.types[0] == "postal_code"){ document.getElementById('{{ locationTemp.postcode.vars.id }}').value = this.long_name; }});{% endif %}
{% if locationType == 'city' and key == 'name' %}$.each(place.address_components, function(){if(this.types[0] == "locality"){ document.getElementById('{{ locationTemp.name.vars.id }}').value = this.long_name; }});{% endif %}
{% if locationType == 'state' and key == 'name' %}$.each(place.address_components, function(){if(this.types[0] == "administrative_area_level_1"){ document.getElementById('{{ locationTemp.name.vars.id }}').value = this.long_name; }});{% endif %}
{% if locationType == 'state' and key == 'code' %}$.each(place.address_components, function(){if(this.types[0] == "administrative_area_level_1"){ document.getElementById('{{ locationTemp.code.vars.id }}').value = this.short_name; }});{% endif %}
{% if locationType == 'country' and key == 'name' %}$.each(place.address_components, function(){if(this.types[0] == "country"){ document.getElementById('{{ locationTemp.name.vars.id }}').value = this.long_name; }});{% endif %}
{% if locationType == 'country' and key == 'code' %}$.each(place.address_components, function(){if(this.types[0] == "country"){ document.getElementById('{{ locationTemp.code.vars.id }}').value = this.short_name; }});{% endif %}
	{% endfor %}
{% endfor %}

{% if locationForm.location is defined %}
        infowindow.setContent('<div>' + place.name + '<br />' + place.formatted_address + '</div>');
{% else %}
		infowindow.setContent('<div>' + place.formatted_address + '</div>');
{% endif %}
        infowindow.open(map, marker);
      });
}
</script>